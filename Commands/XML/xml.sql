/*
    —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö XML 

    –ú–µ—Ç–æ–¥—ã:
    üîπ query() - –º–µ—Ç–æ–¥ –¥–µ–ª–∞–µ—Ç –≤—ã–±–æ—Ä–∫—É –≤ —Å–∞–º–æ–º XML –¥–æ–∫—É–º–µ–Ω—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ —Å —Ç–∏–ø–æ–º XML. –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω 
    –ø–∞—Ä–∞–º–µ—Ç—Ä, –∑–∞–ø—Ä–æ—Å –∫ xml –¥–æ–∫—É–º–µ–Ω—Ç—É, —Ç.–µ. —á—Ç–æ –∏–º–µ–Ω–Ω–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ xml.
    
    üîπ value() ‚Äì –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —É–∑–ª–∞. –ú–µ—Ç–æ–¥ –∏–º–µ–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –ø–µ—Ä–≤—ã–π - —ç—Ç–æ –æ—Ç–∫—É–¥–∞ –±—Ä–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –∞ –≤—Ç–æ—Ä–æ–π - –∫–∞–∫–æ–π 
    —Ç–∏–ø –í—ã –ø—Ä–∏ —ç—Ç–æ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –≤—ã—Ö–æ–¥–µ.
    
    üîπ exist() ‚Äì –¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Ö –∏–ª–∏ –∏–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 
    –≤ XML –¥–æ–∫—É–º–µ–Ω—Ç–µ. –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∏–ø–∞ bit, —Ç–∞–∫–∏–µ –∫–∞–∫: 1 ‚Äì –µ—Å–ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —è–∑—ã–∫–µ XQuery –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
    –Ω–µ–ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, 0 ‚Äì –µ—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, NULL ‚Äì –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Ç–∏–ø–∞ xml, –∫ –∫–æ—Ç–æ—Ä—ã–º –∏–¥–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç 
    –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö, —Ç.–µ. NULL.
    
    üîπ modify() ‚Äì —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç XML –¥–∞–Ω–Ω—ã–µ. 

    üîπ nodes() ‚Äì –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ XML –¥–æ–∫—É–º–µ–Ω—Ç–∞.



*/
----------------------------------------------------------------------------------------------------------------------------
-- —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å XML
CREATE TABLE TestTableXML(
	ID INT IDENTITY(1,1) NOT NULL,
	NameColumn NVARCHAR(100) NOT NULL,
	XMLData XML NULL 
	CONSTRAINT PK_TestTableXML PRIMARY KEY (ID)
)

GO

INSERT INTO TestTableXML (NameColumn, XMLData)
VALUES ('Text', '<Catalog>
					<Name>Eren</Name>
					<LastName>Jeager</LastName>
				 </Catalog>')

GO

SELECT * FROM TestTableXML

-------------------------------------------------
-- query()

SELECT XMLData.query('/Catalog/Name') AS [–¢–µ–≥ Name]
FROM TestTableXML


-------------------------------------------------
-- value()
SELECT XMLData, XMLData.value('/Catalog[1]/LastName[1]', 'VARCHAR(100)') AS [LastName]
FROM TestTableXML


-------------------------------------------------
-- exist()
SELECT *
FROM TestTableXML
WHERE XMLData.exist('/Catalog[1]/LastName') = 1


-------------------------------------------------
-- modify()     –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ (delete)
UPDATE TestTableXML SET XMLData.modify('delete /Catalog/LastName')
GO
SELECT * FROM TestTableXML


-----------------
-- modify()     –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ (insert)
UPDATE TestTableXML 
SET XMLData.modify('insert <LastName>Smith</LastName> as last into (/Catalog) [1]')
GO
SELECT * FROM TestTableXML


-----------------
-- modify()     –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —É–∑–ª–µ (replace value of ... with ...)
UPDATE TestTableXML 
SET XMLData.modify('replace value of(/Catalog/Name[1]/text()) [1] with "Eren"')
GO
SELECT * FROM TestTableXML


-------------------------------------------------
-- nodes()
DECLARE @XML_Doc XML;
SET @XML_Doc='<Root>
				<row id="1" Name="Armin"></row>
				<row id="2" Name="Mikasa"></row>
			  </Root>';
SELECT TMP.col.value('@id','INT') AS Id,
		TMP.col.value('@Name', 'NVARCHAR(10)') AS Name
FROM @XML_Doc.nodes('/Root/row') AS TMP(Col);


-------------------------------------------------
-- 